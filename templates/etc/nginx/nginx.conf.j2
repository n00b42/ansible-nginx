# {{ ansible_managed }}

user {{ nginx_user }};
worker_processes {{ nginx_worker_processes }};
worker_rlimit_nofile {{ nginx_worker_rlimit_nofile }};

{%- for key in nginx_main_directives | default([], true) +%}
{{ key }};
{%- endfor +%}

events {
  worker_connections {{ nginx_events_worker_connections }};
}

http {
  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  server_tokens {{ nginx_http_server_tokens }};

  {%- for header in nginx_http_add_headers | default([], true) +%}
  add_header {{ header }};
  {%- endfor +%}

  log_format combined_custom {{ nginx_http_access_log_format }};
  access_log /var/log/nginx/access.log combined_custom;

  server_names_hash_bucket_size {{ nginx_http_server_names_hash_bucket_size }};
  server_names_hash_max_size {{ nginx_http_server_names_hash_max_size }};
  sendfile {{ nginx_http_sendfile }};
  tcp_nopush {{ nginx_http_tcp_nopush }};
  keepalive_timeout {{ nginx_http_keepalive_timeout }};
  types_hash_max_size {{ nginx_http_types_hash_max_size }};
  client_max_body_size {{ nginx_http_client_max_body_size }};
  gzip {{ nginx_http_gzip }};
  gzip_types {{ nginx_http_gzip_types }};
  gzip_disable "{{ nginx_http_gzip_disable }}";

  ssl_protocols {{ nginx_ssl_protocols }};
  ssl_ciphers "{{ nginx_ssl_ciphers }}";
  ssl_prefer_server_ciphers {{ nginx_ssl_prefer_server_ciphers }};
  ssl_session_cache {{ nginx_ssl_session_cache }};
  ssl_session_timeout {{ nginx_ssl_session_timeout }};
  ssl_stapling {{ nginx_ssl_ssl_stapling }};
  ssl_stapling_verify {{ nginx_ssl_ssl_stapling_verify }};
  resolver {{ nginx_ssl_resolver }};
  resolver_timeout {{ nginx_ssl_resolver_timeout }};
  add_header {{ nginx_ssl_sts_header }};
  ssl_dhparam {{ nginx_ssl_directory }}/dhparam.pem;

  {%- for key in nginx_proxy_directives | default([], true) +%}
  {{ key }};
  {%- endfor +%}

  {%- for key in nginx_http_directives | default([], true) +%}
  {{ key }};
  {%- endfor +%}

  # Default server to redirect http traffic to https.
  
  {%- for port in (nginx_sites.values() | selectattr("redirect_to_https","defined") | selectattr("redirect_to_https") | selectattr("port_http","defined") | map(attribute="port_http") | unique) +%}
  server {
    listen {{ port }};
    server_name _;
    {%- if nginx_ssl_acmechallenge +%}
    location /.well-known/acme-challenge/ {
      root {{ nginx_ssl_acmechallenge_folder }};
      default_type "text/plain";
      try_files $uri =404;
    }
    {%- endif +%}
    location / {
      return 301 https://$host$request_uri;
    }
  }
  {%- endfor +%}

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}

